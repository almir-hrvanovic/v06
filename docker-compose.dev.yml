version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gs-cms-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gs_cms_v05_dev
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - gs-cms-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:7-alpine
    container_name: gs-cms-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-dev-data:/data
    networks:
      - gs-cms-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Optional: Adminer for database management
  adminer:
    image: adminer
    container_name: gs-cms-adminer-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - gs-cms-dev-network
    depends_on:
      - postgres

volumes:
  postgres-dev-data:
  redis-dev-data:

networks:
  gs-cms-dev-network:
    driver: bridge