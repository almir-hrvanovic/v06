
> gs-cms-v05@0.1.0 dev
> next dev

   â–² Next.js 15.1.8
   - Local:        http://localhost:3000
   - Network:      http://10.10.40.87:3000
   - Environments: .env.local, .env
   - Experiments (use with caution):
     Â· turbo

 âœ“ Starting...
 âœ“ Ready in 1718ms
 âœ“ Compiled /src/middleware in 493ms (100 modules)
Middleware check: { pathname: '/', hasSessionToken: false }
 â—‹ Compiling / ...


Source path: /home/hrvanovic_5510/Projects/GS_projects/GS-v05_1/FLOW2_test/src/app/globals.css
Setting up new context...
Finding changed files: 9.506ms


Source path: /home/hrvanovic_5510/Projects/GS_projects/GS-v05_1/FLOW2_test/src/styles/i18n.css


Source path: /home/hrvanovic_5510/Projects/GS_projects/GS-v05_1/FLOW2_test/node_modules/@uploadthing/react/dist/index.css
JIT TOTAL: 156.034ms




(node:1263798) Warning: Label 'JIT TOTAL' already exists for console.time()
(Use `node --trace-warnings ...` to show where the warning was created)
(node:1263798) Warning: Label 'JIT TOTAL' already exists for console.time()
(node:1263798) Warning: No such label 'JIT TOTAL' for console.timeEnd()
Reading changed files: 404.511ms
Sorting candidates: 8.46ms
Generate rules: 220.369ms
Build stylesheet: 3.6ms
Potential classes:  9359
Active contexts:  1


(node:1263798) Warning: No such label 'JIT TOTAL' for console.timeEnd()
 âœ“ Compiled / in 8.2s (1514 modules)
 GET / 200 in 9112ms


Source path: /home/hrvanovic_5510/Projects/GS_projects/GS-v05_1/FLOW2_test/src/app/globals.css
Finding changed files: 9.669ms
Reading changed files: 0.006ms
Sorting candidates: 0.004ms
Generate rules: 0.107ms
Build stylesheet: 0.003ms
Potential classes:  1
Active contexts:  1
JIT TOTAL: 84.708ms


Middleware check: { pathname: '/api/health', hasSessionToken: false }
 âœ“ Compiled in 1348ms (335 modules)
Middleware check: { pathname: '/api', hasSessionToken: false }
Middleware check: { pathname: '/', hasSessionToken: false }
 GET / 200 in 42ms
Middleware check: { pathname: '/api/health', hasSessionToken: false }
Middleware check: { pathname: '/', hasSessionToken: false }
 GET / 200 in 60ms
Middleware check: { pathname: '/', hasSessionToken: true }
 GET / 200 in 92ms
Middleware check: { pathname: '/api/console-monitor/status', hasSessionToken: true }
Middleware check: { pathname: '/api/auth/session', hasSessionToken: true }
 â—‹ Compiling /api/auth/[...nextauth] ...
Middleware check: { pathname: '/auth/signin', hasSessionToken: true }
 âœ“ Compiled /auth/signin in 2s (1514 modules)
 GET /api/console-monitor/status 200 in 2179ms
 GET /auth/signin 200 in 1459ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/auth/session 200 in 2660ms
Middleware check: { pathname: '/api/auth/session', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/auth/session 200 in 34ms
Middleware check: { pathname: '/api/auth/providers', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/auth/providers 200 in 37ms
Middleware check: { pathname: '/api/auth/csrf', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/auth/csrf 200 in 10ms
Middleware check: { pathname: '/api/auth/callback/credentials', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."role"::text, "public"."users"."password", "public"."users"."isActive", "public"."users"."preferredLanguage" FROM "public"."users" WHERE ("public"."users"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
 POST /api/auth/callback/credentials? 200 in 508ms
Middleware check: { pathname: '/api/auth/session', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/auth/session 200 in 25ms
Middleware check: { pathname: '/dashboard', hasSessionToken: true }
 â—‹ Compiling /dashboard ...
 âœ“ Compiled /dashboard in 2.3s (1831 modules)
 GET /dashboard 200 in 2633ms
Middleware check: { pathname: '/dashboard', hasSessionToken: true }
 GET /dashboard 200 in 123ms
Middleware check: { pathname: '/api/notifications', hasSessionToken: true }
 â—‹ Compiling /api/notifications ...
 âœ“ Compiled /api/notifications in 788ms (1833 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/notifications 200 in 875ms
Middleware check: { pathname: '/api/notifications', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/notifications 200 in 8ms
Middleware check: { pathname: '/dashboard/inquiries', hasSessionToken: true }
 â—‹ Compiling /dashboard/inquiries ...
 âœ“ Compiled /dashboard/inquiries in 1090ms (1866 modules)
 GET /dashboard/inquiries 200 in 1319ms
Middleware check: { pathname: '/api/customers', hasSessionToken: true }
Middleware check: { pathname: '/api/inquiries', hasSessionToken: true }
 â—‹ Compiling /api/inquiries ...
 âœ“ Compiled /api/inquiries in 2.7s (1933 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."inquiries"."id" FROM "public"."inquiries" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."inquiries"."id", "public"."inquiries"."title", "public"."inquiries"."description", "public"."inquiries"."status"::text, "public"."inquiries"."priority"::text, "public"."inquiries"."deadline", "public"."inquiries"."totalValue", "public"."inquiries"."createdAt", "public"."inquiries"."updatedAt", "public"."inquiries"."customerId", "public"."inquiries"."createdById", "public"."inquiries"."assignedToId", COALESCE("aggr_selection_0_InquiryItem"."_aggr_count_items", 0) AS "_aggr_count_items" FROM "public"."inquiries" LEFT JOIN (SELECT "public"."inquiry_items"."inquiryId", COUNT(*) AS "_aggr_count_items" FROM "public"."inquiry_items" WHERE 1=1 GROUP BY "public"."inquiry_items"."inquiryId") AS "aggr_selection_0_InquiryItem" ON ("public"."inquiries"."id" = "aggr_selection_0_InquiryItem"."inquiryId") WHERE 1=1 ORDER BY "public"."inquiries"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt" FROM "public"."customers" WHERE "public"."customers"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt", COALESCE("aggr_selection_0_Inquiry"."_aggr_count_inquiries", 0) AS "_aggr_count_inquiries" FROM "public"."customers" LEFT JOIN (SELECT "public"."inquiries"."customerId", COUNT(*) AS "_aggr_count_inquiries" FROM "public"."inquiries" WHERE 1=1 GROUP BY "public"."inquiries"."customerId") AS "aggr_selection_0_Inquiry" ON ("public"."customers"."id" = "aggr_selection_0_Inquiry"."customerId") WHERE 1=1 ORDER BY "public"."customers"."createdAt" DESC OFFSET $1
 GET /api/customers? 200 in 2815ms
prisma:query SELECT "public"."inquiry_items"."id", "public"."inquiry_items"."name", "public"."inquiry_items"."description", "public"."inquiry_items"."quantity", "public"."inquiry_items"."unit", "public"."inquiry_items"."status"::text, "public"."inquiry_items"."notes", "public"."inquiry_items"."requestedDelivery", "public"."inquiry_items"."createdAt", "public"."inquiry_items"."updatedAt", "public"."inquiry_items"."inquiryId", "public"."inquiry_items"."assignedToId" FROM "public"."inquiry_items" WHERE "public"."inquiry_items"."inquiryId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."cost_calculations"."id", "public"."cost_calculations"."materialCost", "public"."cost_calculations"."laborCost", "public"."cost_calculations"."overheadCost", "public"."cost_calculations"."totalCost", "public"."cost_calculations"."notes", "public"."cost_calculations"."isApproved", "public"."cost_calculations"."approvedAt", "public"."cost_calculations"."createdAt", "public"."cost_calculations"."updatedAt", "public"."cost_calculations"."inquiryItemId", "public"."cost_calculations"."calculatedById" FROM "public"."cost_calculations" WHERE "public"."cost_calculations"."inquiryItemId" IN ($1,$2,$3,$4,$5,$6,$7) OFFSET $8
 GET /api/inquiries?limit=20 200 in 2817ms
Middleware check: { pathname: '/api/customers', hasSessionToken: true }
Middleware check: { pathname: '/api/inquiries', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/customers? 200 in 18ms
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt", COALESCE("aggr_selection_0_Inquiry"."_aggr_count_inquiries", 0) AS "_aggr_count_inquiries" FROM "public"."customers" LEFT JOIN (SELECT "public"."inquiries"."customerId", COUNT(*) AS "_aggr_count_inquiries" FROM "public"."inquiries" WHERE 1=1 GROUP BY "public"."inquiries"."customerId") AS "aggr_selection_0_Inquiry" ON ("public"."customers"."id" = "aggr_selection_0_Inquiry"."customerId") WHERE 1=1 ORDER BY "public"."customers"."createdAt" DESC OFFSET $1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."inquiries"."id" FROM "public"."inquiries" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."inquiries"."id", "public"."inquiries"."title", "public"."inquiries"."description", "public"."inquiries"."status"::text, "public"."inquiries"."priority"::text, "public"."inquiries"."deadline", "public"."inquiries"."totalValue", "public"."inquiries"."createdAt", "public"."inquiries"."updatedAt", "public"."inquiries"."customerId", "public"."inquiries"."createdById", "public"."inquiries"."assignedToId", COALESCE("aggr_selection_0_InquiryItem"."_aggr_count_items", 0) AS "_aggr_count_items" FROM "public"."inquiries" LEFT JOIN (SELECT "public"."inquiry_items"."inquiryId", COUNT(*) AS "_aggr_count_items" FROM "public"."inquiry_items" WHERE 1=1 GROUP BY "public"."inquiry_items"."inquiryId") AS "aggr_selection_0_InquiryItem" ON ("public"."inquiries"."id" = "aggr_selection_0_InquiryItem"."inquiryId") WHERE 1=1 ORDER BY "public"."inquiries"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt" FROM "public"."customers" WHERE "public"."customers"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."inquiry_items"."id", "public"."inquiry_items"."name", "public"."inquiry_items"."description", "public"."inquiry_items"."quantity", "public"."inquiry_items"."unit", "public"."inquiry_items"."status"::text, "public"."inquiry_items"."notes", "public"."inquiry_items"."requestedDelivery", "public"."inquiry_items"."createdAt", "public"."inquiry_items"."updatedAt", "public"."inquiry_items"."inquiryId", "public"."inquiry_items"."assignedToId" FROM "public"."inquiry_items" WHERE "public"."inquiry_items"."inquiryId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."cost_calculations"."id", "public"."cost_calculations"."materialCost", "public"."cost_calculations"."laborCost", "public"."cost_calculations"."overheadCost", "public"."cost_calculations"."totalCost", "public"."cost_calculations"."notes", "public"."cost_calculations"."isApproved", "public"."cost_calculations"."approvedAt", "public"."cost_calculations"."createdAt", "public"."cost_calculations"."updatedAt", "public"."cost_calculations"."inquiryItemId", "public"."cost_calculations"."calculatedById" FROM "public"."cost_calculations" WHERE "public"."cost_calculations"."inquiryItemId" IN ($1,$2,$3,$4,$5,$6,$7) OFFSET $8
 GET /api/inquiries?limit=20 200 in 22ms
Middleware check: { pathname: '/dashboard/inquiries/new', hasSessionToken: true }
 â—‹ Compiling /dashboard/inquiries/new ...
 âœ“ Compiled /dashboard/inquiries/new in 3.5s (2063 modules)
 GET /dashboard/inquiries/new 200 in 4091ms
Middleware check: { pathname: '/installHook.js.map', hasSessionToken: true }
Middleware check: { pathname: '/api/customers', hasSessionToken: true }
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt", COALESCE("aggr_selection_0_Inquiry"."_aggr_count_inquiries", 0) AS "_aggr_count_inquiries" FROM "public"."customers" LEFT JOIN (SELECT "public"."inquiries"."customerId", COUNT(*) AS "_aggr_count_inquiries" FROM "public"."inquiries" WHERE 1=1 GROUP BY "public"."inquiries"."customerId") AS "aggr_selection_0_Inquiry" ON ("public"."customers"."id" = "aggr_selection_0_Inquiry"."customerId") WHERE 1=1 ORDER BY "public"."customers"."createdAt" DESC OFFSET $1
 GET /api/customers 200 in 174ms
 â—‹ Compiling /_not-found ...
Middleware check: { pathname: '/api/customers', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt", COALESCE("aggr_selection_0_Inquiry"."_aggr_count_inquiries", 0) AS "_aggr_count_inquiries" FROM "public"."customers" LEFT JOIN (SELECT "public"."inquiries"."customerId", COUNT(*) AS "_aggr_count_inquiries" FROM "public"."inquiries" WHERE 1=1 GROUP BY "public"."inquiries"."customerId") AS "aggr_selection_0_Inquiry" ON ("public"."customers"."id" = "aggr_selection_0_Inquiry"."customerId") WHERE 1=1 ORDER BY "public"."customers"."createdAt" DESC OFFSET $1
 GET /api/customers 200 in 656ms
 âœ“ Compiled /_not-found in 6.5s (2067 modules)
 GET /installHook.js.map 404 in 7062ms
 âœ“ Compiled in 2.3s (1406 modules)
Middleware check: { pathname: '/dashboard/inquiries/new', hasSessionToken: true }
 GET /dashboard/inquiries/new 200 in 294ms
Middleware check: { pathname: '/dashboard/inquiries/new', hasSessionToken: true }
 GET /dashboard/inquiries/new 200 in 582ms
Middleware check: { pathname: '/api/auth/session', hasSessionToken: true }
Middleware check: { pathname: '/api/console-monitor/status', hasSessionToken: true }
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 1084ms (1413 modules)
 âœ“ Compiled (1415 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/console-monitor/status 200 in 1663ms
 GET /api/auth/session 200 in 1662ms
Middleware check: { pathname: '/api/auth/session', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/auth/session 200 in 11ms
Middleware check: { pathname: '/api/customers', hasSessionToken: true }
Middleware check: { pathname: '/api/notifications', hasSessionToken: true }
 â—‹ Compiling /api/notifications ...
 âœ“ Compiled /api/notifications in 1036ms (1427 modules)
 âœ“ Compiled (1429 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/notifications 200 in 1683ms
 GET /api/customers 200 in 1690ms
prisma:query SELECT 1
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt", COALESCE("aggr_selection_0_Inquiry"."_aggr_count_inquiries", 0) AS "_aggr_count_inquiries" FROM "public"."customers" LEFT JOIN (SELECT "public"."inquiries"."customerId", COUNT(*) AS "_aggr_count_inquiries" FROM "public"."inquiries" WHERE 1=1 GROUP BY "public"."inquiries"."customerId") AS "aggr_selection_0_Inquiry" ON ("public"."customers"."id" = "aggr_selection_0_Inquiry"."customerId") WHERE 1=1 ORDER BY "public"."customers"."createdAt" DESC OFFSET $1
Middleware check: { pathname: '/api/notifications', hasSessionToken: true }
Middleware check: { pathname: '/api/customers', hasSessionToken: true }
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
 GET /api/notifications 200 in 15ms
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
prisma:query SELECT "public"."customers"."id", "public"."customers"."name", "public"."customers"."email", "public"."customers"."phone", "public"."customers"."address", "public"."customers"."isActive", "public"."customers"."createdAt", "public"."customers"."updatedAt", COALESCE("aggr_selection_0_Inquiry"."_aggr_count_inquiries", 0) AS "_aggr_count_inquiries" FROM "public"."customers" LEFT JOIN (SELECT "public"."inquiries"."customerId", COUNT(*) AS "_aggr_count_inquiries" FROM "public"."inquiries" WHERE 1=1 GROUP BY "public"."inquiries"."customerId") AS "aggr_selection_0_Inquiry" ON ("public"."customers"."id" = "aggr_selection_0_Inquiry"."customerId") WHERE 1=1 ORDER BY "public"."customers"."createdAt" DESC OFFSET $1
 GET /api/customers 200 in 19ms
Middleware check: { pathname: '/api/inquiries', hasSessionToken: true }
 â—‹ Compiling /api/inquiries ...
 âœ“ Compiled /api/inquiries in 1445ms (1475 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev#debug-enabled
NextAuth redirect callback: {
  url: 'http://localhost:3000/auth/signin',
  baseUrl: 'http://localhost:3000'
}
Same origin redirect to: http://localhost:3000/auth/signin
Create inquiry error: Error [ZodError]: [
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "deadline"
    ],
    "message": "Expected date, received string"
  }
]
    at parse (src/app/api/inquiries/route.ts:135:46)
  133 |
  134 |     const body = await request.json()
> 135 |     const validatedData = createInquirySchema.parse(body)
      |                                              ^
  136 |
  137 |     const inquiry = await prisma.inquiry.create({
  138 |       data: { {
  issues: [Array],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)]
}
 POST /api/inquiries 500 in 1757ms
Middleware check: {
  pathname: '/dashboard/inquiries/installHook.js.map',
  hasSessionToken: true
}
 â—‹ Compiling /dashboard/inquiries/[id] ...
 âœ“ Compiled /dashboard/inquiries/[id] in 4.1s (2197 modules)
 GET /dashboard/inquiries/installHook.js.map 200 in 6314ms
